name: ci

# build on every PR and commit to master
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    name: build-and-test
    runs-on: ubuntu-latest

    services:
      postgres:
        # Docker Hub image
        image: postgres
        env:
          POSTGRES_PASSWORD: spleen
          POSTGRES_DB: qiime2-library
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2
    - name: set up python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: install and set up dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/travis.txt
        pip install -q https://github.com/qiime2/q2lint/archive/master.zip
    - name: run tests
      env:
        ADMINS: foo
        ALLOWED_HOSTS: localhost
        DATABASE_URL: postgres://postgres@localhost/qiime2-library
        DISCOURSE_SSO_SECRET: peanut
        DJANGO_SETTINGS_MODULE: config.settings.production
        GOOGLE_ANALYTICS_PROPERTY_ID: gwar
        SECRET_KEY: gerg
        AWS_ACCESS_KEY_ID: i
        AWS_SECRET_ACCESS_KEY: scream
        AWS_SES_REGION_NAME: for
        AWS_SES_REGION_ENDPOINT: icecream
        PGHOST: postgres
        PGPASSWORD: spleen
        PGPORT: ${{ job.services.postgres.ports[5432] }}
      run: |
        python manage.py migrate
        make lint

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2 
        with:
          fetch-depth: 0
      - name: deploy to dokku instance
        uses: idoberko2/dokku-deploy-github-action@v1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          dokku-host: 'library.qiime2.org'
          app-name: 'webapp'
          # Keeping the following around, in case of emergencies:
          # git-push-flags: --force
