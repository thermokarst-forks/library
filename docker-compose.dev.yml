version: '3'

services:
  db:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust

  mq:
    image: rabbitmq

  worker:
    build:
      context: .
      args:
        RUNENV: local
    command: bash -c "python manage.py celery_worker amqp://guest@mq/ info packages,db,default"
    depends_on:
      - mq
    environment:
      - GITHUB_TOKEN=${GITHUB_TOKEN}
    volumes:
      - .:/code
      - ./data:/data

  beat:
    build:
      context: .
      args:
        RUNENV: local
    command: bash -c "python manage.py celery_beat"
    depends_on:
      - worker
    volumes:
      - .:/code
      - ./data:/data

  web:
    build:
      context: .
      args:
        RUNENV: local
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
      - mq
      - worker
      - beat
    environment:
      - GITHUB_TOKEN=${GITHUB_TOKEN}
    ports:
      - 8000:8000
    volumes:
      - .:/code

  packages:
    command: bash -c "cd /data && python -m http.server 8001"
    image: python
    ports:
      - 8001:8001
    volumes:
      - ./data:/data

  flower:
    build:
      context: .
      args:
        RUNENV: local
    command: bash -c "python manage.py celery_flower"
    depends_on:
      - web
    ports:
      - 5555:5555
    volumes:
      - .:/code
